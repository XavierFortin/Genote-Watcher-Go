name: Release Go Application

on:
  push:
    tags:
      - "*"

jobs:
  cache-and-install:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: 'src/client'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 10
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install
  build:
    name: Build and Release
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.23.1"

      - name: Install dependencies
        run: cd src && go mod download

      - name: Create .env template
        run: |
          cat > .env.template << EOL
          GENOTE_USER=
          GENOTE_PASSWORD=
          DISCORD_WEBHOOK=
          TIME_INTERVAL=0
          EOL

      - name: Build Client
        run: |
          cd src/client
          pnpm build
      - name: Build and package Linux binary
        run: |
          mkdir -p build/linux
          GOOS=linux GOARCH=amd64 go build -C src -ldflags "-X utils.BuildMode=prod" -o build/linux/genote-watcher
          cp .env.template build/linux/.env
          cd build/linux
          zip ../genote-watcher:${{github.ref_name}}-linux-amd64.zip genote-watcher .env
          cd ../..

      - name: Build and package Windows binary
        run: |
          mkdir -p build/windows
          GOOS=windows GOARCH=amd64 go build -C src -ldflags "-X utils.BuildMode=prod" -o build/windows/genote-watcher.exe
          cp .env.template build/windows/.env
          cd build/windows
          zip ../genote-watcher:${{github.ref_name}}-windows-amd64.zip genote-watcher.exe .env
          cd ../..
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            build/genote-watcher:${{github.ref_name}}-linux-amd64.zip
            build/genote-watcher:${{github.ref_name}}-windows-amd64.zip
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-and-push:
    runs-on: ubuntu-latest
    env:
      DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
      DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}
      IMAGE_NAME: genote-watcher
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_HUB_USERNAME }}
          password: ${{ env.DOCKER_HUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_HUB_USERNAME }}/${{ env.IMAGE_NAME }}
          tags: |
            # Use the Git tag version (without 'v' prefix)
            type=semver,pattern={{version}}
            # Also tag as latest
            type=raw,value=latest

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          platforms: linux/amd64,linux/arm64
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
